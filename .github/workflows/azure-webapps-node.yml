# This <!DOCTYPE html>
<html lang="es">
<cabeza>
    <meta conjunto de caracteres="UTF-8">
    <meta name="viewport" content="ancho=ancho-del-dispositivo, escala-inicial=1.0">
    <title>¿Quieres ser mi San Valentín?</title>
    <estilo>
        cuerpo {
            familia de fuentes: 'Arial', sans-serif;
            color de fondo: #ffe6e6;
            alinear texto: centro;
            relleno: 20px;
            desbordamiento: oculto;
        }
        .contenedor {
            pantalla: ninguna;
            transición: todos los 0,5 s de entrada y salida suaves;
            animación: fadeIn 1s entrada-salida gradual;
        }
        .activo {
            pantalla: bloque;
        }
        botón {
            relleno: 12px 25px;
            margen: 10px;
            tamaño de fuente: 18px;
            borde: ninguno;
            radio del borde: 15px;
            cursor: puntero;
            transición: color de fondo 0,3 s, transformación 0,2 s;
        }
        .Sí {
            color de fondo: #ff4d4d;
            color: blanco;
        }
        .sí:pasar el mouse {
            color de fondo: #e60000;
            transformar: escala(1.1);
        }
        .No {
            color de fondo: #cccccc;
            Color: negro;
        }
        .no:hover {
            color de fondo: #999999;
            transformar: escala(1.1);
        }
        imagen {
            ancho: 250px;
            margen inferior: 20px;
            animación: rebote 2s infinito;
        }

        /* Animación de entrada */
        @keyframes se desvanecen {
            desde { opacidad: 0; transformación: escala(0.9); }
            para { opacidad: 1; transformar: escala(1); }
        }

        /* Animación de rebote para el oso */
        @keyframes rebotan {
            0%, 100% { transformar: translateY(0); }
            50% { transformar: translateY(-20px); }
        }

        /* Corazones flotantes */
        .corazón {
            posición: absoluta;
            ancho: 20px;
            altura: 20px;
            color de fondo: #ff4d4d;
            transformar: rotar(45deg);
            animación: float 5s infinita facilidad de entrada y salida;
            opacidad: 0,8;
        }

        .corazón::antes, .corazón::después {
            contenido: '';
            posición: absoluta;
            ancho: 20px;
            altura: 20px;
            color de fondo: #ff4d4d;
            radio del borde: 50%;
        }
        .corazon::antes {
            arriba:-10px;
            izquierda: 0;
        }
        .corazon::despues {
            izquierda: -10px;
            arriba: 0;
        }

        @keyframes flotan {
            desde { transformar: translateY(0) rotar(45deg); opacidad: 1; }
            para { transformar: translateY(-800px) rotar(45deg); opacidad: 0; }
        }
    </estilo>
</cabeza>
<cuerpo>

    <!-- Pantalla 1 -->
    <div id="pantalla1" clase="contenedor activo">
        <img src="https://media.giphy.com/media/fqF0pHfJuB2zS/giphy.gif" alt="Oso cariñoso">
        <h1>¿Quieres ser mi San Valentín? â ¤ï¸ </h1>
        <button class="yes" onclick="nextScreen('doubtScreen')">Sí</button>
        <button class="no" onclick="pantallaanterior(null)">No</button>
    </div>

    <!-- Pantalla de Duda -->
    <div id="dudaPantalla" clase="contenedor">
        <img src="https://media.giphy.com/media/1X7lE1h5iikjI/giphy.gif" alt="Oso pensativo">
        <h1>¿Estás segura de tu respuesta? ðŸ'</h1>
        <button class="yes" onclick="nextScreen('confirmationScreen')">Sí</button>
        <button class="no" onclick="pantallaanterior('pantalla1')">No</button>
    </div>

    <!-- Pantalla 2 -->
    <div id="pantalla2" clase="contenedor">
        <img src="https://media.giphy.com/media/3o6Zt481isNVuQI1l6/giphy.gif" alt="Oso enamorado">
        ¿Segura? ðŸ˜ </h1>
        <button class="yes" onclick="nextScreen('confirmationScreen')">Sí</button>
        <button class="no" onclick="pantallaanterior('pantalladuda')">No</button>
    </div>

    <!-- Pantalla 3 -->
    <div id="pantalla3" c will build and push a node.js application to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-nodejs?tabs=linux&pivots=development-environment-cli
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: your-app-name    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '20.x'                # set this to the node version to use

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: npm install, build, and test
      run: |
        npm install
        npm run build --if-present
        npm run test --if-present

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v4
      with:
        name: node-app
        path: .

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: node-app

    - name: 'Deploy to Azure WebApp'
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
